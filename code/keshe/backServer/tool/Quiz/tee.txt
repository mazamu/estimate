quiz.py:24:        wordList1 = pd.read_csv(self.path + 'ielts1.csv')['word'].tolist()
quiz.py:29:        for i in range(len(wordList1) - 1, -1, -1):
quiz.py:30:            if wordList1[i] in wordList2:
quiz.py:31:                del wordList1[i]
quiz.py:37:        return wordList1,wordList2,wordList3
quiz.py:39:    def Problem(self, wordList1, wordList2, wordList3,problemNum=100):
quiz.py:49:        self.ieltsNum = int(problemNum * (len(wordList1)/(len(wordList1) + len(wordList2) + len(wordList3))))
quiz.py:50:        ieltsList = random.sample(wordList1, self.ieltsNum)
quiz.py:53:        self.cetsNum = int(problemNum * (len(wordList2)/(len(wordList1) + len(wordList2) + len(wordList3))))
quiz.py:68:    def getResult(self,answer,wordList1,wordList2,wordList3):
quiz.py:75:            if answer[i]['flag'] == True and strTemp in wordList1:
quiz.py:86:    def evaluateResult(self,result,wordList1,wordList2,wordList3):
quiz.py:97:        total = int((len(wordList1) + len(wordList2) + len(wordList3)) * totalRate)
quiz.py:98:#         print(len(wordList1) + len(wordList2) + len(wordList3))
Untitled.ipynb:2710:    "wordList1,wordList2,wordList3 = q.GetWordcsv()\n",
Untitled.ipynb:2715:    "sample1 = random.sample(wordList1,int(len(wordList1)*0.5*div))\n",
Untitled.ipynb:2724:    "    problemList = q.Problem(wordList1, wordList2, wordList3, num)\n",
Untitled.ipynb:2729:    "    result = q.getResult(problemList,wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2731:    "    total = q.evaluateResult(result,wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2737:    "problemList = q.Problem(wordList1, wordList2, wordList3, 8913)\n",
Untitled.ipynb:2742:    "result = q.getResult(problemList,wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2744:    "total = q.evaluateResult(result,wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2766:    "problemList = q.Problem(wordList1, wordList2, wordList3)\n",
Untitled.ipynb:2770:    "total = q.evaluateResult(q.getResult(problemList,wordList1,wordList2,wordList3),wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2809:      "\u001b[0;32m<ipython-input-4-86b8e653c70b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproblemList\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0mknow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproblemList\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'word'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m             \u001b[0mproblemList\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'flag'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0mtotal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluateResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproblemList\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mwordList3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
Untitled.ipynb:2819:    "#     problemList = q.Problem(wordList1, wordList2, wordList3,num)\n",
Untitled.ipynb:2826:    "#     total = q.evaluateResult(q.getResult(problemList,wordList1,wordList2,wordList3),wordList1,wordList2,wordList3)\n",
Untitled.ipynb:2832:    "# problemList = q.Problem(wordList1, wordList2, wordList3, 100)\n",
Untitled.ipynb:2836:    "# total = q.evaluateResult(q.getResult(problemList,wordList1,wordList2,wordList3),wordList1,wordList2,wordList3)\n",
